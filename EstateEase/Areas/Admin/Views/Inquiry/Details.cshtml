@using EstateEase.Models.ViewModels
@model InquiryViewModel
@{
    ViewData["Title"] = "Inquiry Details";
    Layout = "_AdminLayout";
}

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="mb-1 fw-bold">Inquiry Details</h4>
                    <p class="text-muted">Review client inquiry information</p>
                </div>
                <div>
                    <a asp-action="Index" class="btn btn-outline-primary rounded-pill">
                        <i class="bi bi-arrow-left me-2"></i> Back to Inquiries
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card border-0 shadow-sm rounded-4 fade-in show">
                <div class="card-header gradient-primary text-white p-4">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5 class="mb-0 fw-bold">Inquiry #@Model.Id</h5>
                        <span class="@(Model.Status == "New" ? "badge bg-danger" : Model.Status == "In Progress" ? "badge bg-warning" : "badge bg-success") rounded-pill px-3 py-2">@Model.Status</span>
                    </div>
                </div>
                <div class="card-body p-4">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-4">
                                <h6 class="text-muted mb-2">Client Information</h6>
                                <div class="d-flex align-items-center mb-3">
                                    <div class="avatar-circle me-3">
                                        @if (!string.IsNullOrEmpty(Model.ClientName))
                                        {
                                            <span>@(Model.ClientName[0].ToString().ToUpper())</span>
                                        }
                                        else
                                        {
                                            <span>U</span>
                                        }
                                    </div>
                                    <div>
                                        <h5 class="mb-1 fw-semibold">@Model.ClientName</h5>
                                        <p class="text-muted mb-0">@Model.ClientEmail</p>
                                        @if (!string.IsNullOrEmpty(Model.ClientPhone))
                                        {
                                            <p class="text-muted mb-0">@Model.ClientPhone</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-4">
                                <h6 class="text-muted mb-2">Inquiry Details</h6>
                                <p><strong>Subject:</strong> @Model.Subject</p>
                                <p><strong>Received:</strong> @Model.CreatedAt.ToString("MMM dd, yyyy hh:mm tt")</p>
                                @if (!string.IsNullOrEmpty(Model.PropertyId))
                                {
                                    <div class="d-flex align-items-center mt-3">
                                        <div class="property-image rounded me-2" style="background-image: url('/images/property-placeholder.jpg')"></div>
                                        <div>
                                            <h6 class="mb-1 fw-semibold">@Model.PropertyTitle</h6>
                                            <p class="text-muted small mb-0">@Model.PropertyAddress</p>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-12">
                            <h6 class="text-muted mb-3">Message Content</h6>
                            <div class="p-4 bg-light rounded-4">
                                <p>@Model.Message</p>
                            </div>
                        </div>
                    </div>

                    <div class="mt-4 d-flex gap-2 justify-content-end">
                        @if (Model.Status != "Resolved")
                        {
                            <a asp-action="Reply" asp-route-id="@Model.Id" class="btn btn-primary">
                                <i class="bi bi-reply me-2"></i> Reply
                            </a>
                            <form asp-action="MarkAsResolved" asp-route-id="@Model.Id" method="post" class="d-inline">
                                <button type="submit" class="btn btn-success">
                                    <i class="bi bi-check-lg me-2"></i> Mark as Resolved
                                </button>
                            </form>
                        }
                        else
                        {
                            <span class="badge bg-success p-2">
                                <i class="bi bi-check-circle me-2"></i> This inquiry has been resolved
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Gradient colors */
        .gradient-primary {
            background: linear-gradient(135deg, #2937f0 0%, #9f1ae2 100%);
        }
        
        /* Card styling */
        .card {
            overflow: hidden;
            border-radius: 16px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1) !important;
        }
        
        .card-header {
            border-bottom: 0;
        }
        
        /* Avatar styling */
        .avatar-circle {
            width: 50px;
            height: 50px;
            background: linear-gradient(135deg, #2937f0 0%, #9f1ae2 100%);
            color: white;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.5rem;
        }
        
        /* Property image */
        .property-image {
            width: 50px;
            height: 50px;
            background-size: cover;
            background-position: center;
        }
        
        /* Animation */
        .fade-in {
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.5s ease, transform 0.5s ease;
        }
        
        .fade-in.show {
            opacity: 1;
            transform: translateY(0);
        }
        
        /* Badge styling */
        .badge {
            padding: 0.5em 1em;
            font-weight: normal;
        }
    </style>
}

@section Scripts {
    <script>
        $(document).ready(function() {
            // Initialize tooltips
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });
        });
    </script>
} 