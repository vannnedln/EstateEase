@model EstateEase.Models.ViewModels.UserDashboardViewModel
@using EstateEase.Models.Entities
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_UserLayout";
    var userPropertiesRaw = ViewBag.Debug_UserPropertiesRaw as List<UserProperty>;
    var userRoles = ViewBag.Debug_UserRoles as List<string>;
}

<div class="container-fluid p-0">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold mb-0">My Dashboard</h2>
        <div>
            <a href="@Url.Action("Properties", "Home", new { area = "" })" class="btn btn-primary">
                <i class="bi bi-building-add me-2"></i>Browse Properties
            </a>
        </div>
    </div>

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success mb-4">
            <i class="bi bi-check-circle me-2"></i>
            @TempData["Success"]
        </div>
    }

    <!-- Debug Information -->
    <div class="alert alert-info mb-4">
        <h5>Debug Information</h5>
        
        <div class="mb-3">
            <h6>Authentication</h6>
            <ul>
                <li>Is Authenticated: @ViewBag.Debug_IsAuthenticated</li>
                <li>Username: @ViewBag.Debug_UserName</li>
                <li>User ID: @ViewBag.Debug_UserId</li>
                <li>Is In User Role: @ViewBag.Debug_IsInUserRole</li>
                <li>Roles: @(userRoles != null && userRoles.Any() ? string.Join(", ", userRoles) : "None")</li>
            </ul>
        </div>
        
        <div class="mb-3">
            <h6>Property Counts</h6>
            <ul>
                <li>Owned Properties Count: @ViewBag.Debug_OwnedCount</li>
                <li>Rented Properties Count: @ViewBag.Debug_RentedCount</li>
                <li>Total Properties Count: @ViewBag.Debug_TotalCount</li>
            </ul>
        </div>
        
        @if (TempData["DebugUserId"] != null)
        {
            <div class="mt-2 border-top pt-2">
                <h6>Test Property Debug</h6>
                <ul>
                    <li>Test User ID: @TempData["DebugUserId"]</li>
                    <li>Bought Property ID: @TempData["DebugBoughtPropertyId"]</li>
                    <li>Rented Property ID: @TempData["DebugRentedPropertyId"]</li>
                    <li>User Properties Count: @TempData["DebugUserPropertiesCount"]</li>
                </ul>
            </div>
        }
        
        @if (userPropertiesRaw != null && userPropertiesRaw.Any())
        {
            <div class="mt-2 border-top pt-2">
                <h6>Raw User Properties (@userPropertiesRaw.Count)</h6>
                <table class="table table-sm table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>User ID</th>
                            <th>Property ID</th>
                            <th>Ownership</th>
                            <th>Relationship</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var prop in userPropertiesRaw)
                        {
                            <tr>
                                <td>@prop.Id</td>
                                <td>@prop.UserId</td>
                                <td>@prop.PropertyId</td>
                                <td>@prop.OwnershipType</td>
                                <td>@prop.RelationshipType</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="mt-2 border-top pt-2">
                <p class="text-danger">No raw user properties found!</p>
            </div>
        }
        
        <p>
            <a href="@Url.Action("CreateTestProperty", "Test")" class="btn btn-sm btn-success">Create Test Properties</a>
            <a href="@Url.Action("CheckUserProperties", "Test")" class="btn btn-sm btn-info">Check User Properties</a>
            <a href="@Url.Action("CheckAllUserProperties", "Test")" class="btn btn-sm btn-warning">Check All User Properties</a>
        </p>
    </div>

    <!-- Overview Stats -->
    <div class="row g-4 mb-5">
        <div class="col-md-4">
            <div class="dashboard-stat" style="background: linear-gradient(45deg, #2937f0, #9f1ae2)">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div>
                        <h3 class="h1 mb-0 fw-bold">@(Model.OwnedPropertiesCount + Model.RentedPropertiesCount)</h3>
                        <p class="mb-0 text-white-50">Total Properties</p>
                    </div>
                    <div class="rounded-circle bg-white bg-opacity-25 p-3">
                        <i class="bi bi-houses fs-3 text-white"></i>
                    </div>
                </div>
                <a href="@Url.Action("Index", "Properties", new { area = "User" })" class="text-white text-decoration-none d-flex align-items-center fw-medium">
                    <span>View all</span>
                    <i class="bi bi-chevron-right ms-1"></i>
                </a>
            </div>
        </div>
        <div class="col-md-4">
            <div class="dashboard-stat">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div>
                        <h3 class="h1 mb-0 fw-bold">@Model.OwnedPropertiesCount</h3>
                        <p class="mb-0 text-white-50">Properties Owned</p>
                    </div>
                    <div class="rounded-circle bg-white bg-opacity-25 p-3">
                        <i class="bi bi-house-check fs-3 text-white"></i>
                    </div>
                </div>
                <a href="@Url.Action("Index", "Properties", new { area = "User", ownershipFilter = "Bought" })" class="text-white text-decoration-none d-flex align-items-center fw-medium">
                    <span>View all</span>
                    <i class="bi bi-chevron-right ms-1"></i>
                </a>
            </div>
        </div>
        <div class="col-md-4">
            <div class="dashboard-stat" style="background: linear-gradient(45deg, #9f1ae2, #4f5aff)">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <div>
                        <h3 class="h1 mb-0 fw-bold">@Model.RentedPropertiesCount</h3>
                        <p class="mb-0 text-white-50">Properties Rented</p>
                    </div>
                    <div class="rounded-circle bg-white bg-opacity-25 p-3">
                        <i class="bi bi-house-gear fs-3 text-white"></i>
                    </div>
                </div>
                <a href="@Url.Action("Index", "Properties", new { area = "User", ownershipFilter = "Rented" })" class="text-white text-decoration-none d-flex align-items-center fw-medium">
                    <span>View all</span>
                    <i class="bi bi-chevron-right ms-1"></i>
                </a>
            </div>
        </div>
    </div>

    <!-- My Properties Section -->
    <div class="mb-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h3 class="fw-bold mb-0">My Properties</h3>
            <a href="@Url.Action("Index", "Properties", new { area = "User" })" class="btn btn-outline-primary btn-sm">View All</a>
        </div>

        @if (Model.RecentProperties?.Any() == true)
        {
            // Check if there are any rented properties that are about to expire
            var rentalsNeedingAttention = Model.RecentProperties
                .Where(p => p.OwnershipType == "Rented" && p.ExpiryDate.HasValue && (p.ExpiryDate.Value - DateTime.Now).TotalDays <= 30)
                .ToList();
                
            if (rentalsNeedingAttention.Any())
            {
                <div class="alert alert-warning mb-4">
                    <div class="d-flex align-items-center">
                        <div class="me-3 fs-3">
                            <i class="bi bi-exclamation-triangle-fill"></i>
                        </div>
                        <div>
                            <h5 class="mb-2">Rentals Needing Attention</h5>
                            <p class="mb-3">You have @rentalsNeedingAttention.Count rental properties that need attention:</p>
                            
                            <div class="list-group mb-3">
                                @foreach (var rental in rentalsNeedingAttention)
                                {
                                    var daysRemaining = (rental.ExpiryDate.Value - DateTime.Now).TotalDays;
                                    <div class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                                        <div>
                                            <strong>@rental.Title</strong>
                                            <div class="text-muted small">
                                                @if (daysRemaining <= 0)
                                                {
                                                    <span class="text-danger">Expired</span>
                                                }
                                                else
                                                {
                                                    <span>Expires in @Math.Ceiling(daysRemaining) days (@(rental.ExpiryDate.Value.ToString("MMM dd, yyyy")))</span>
                                                }
                                            </div>
                                        </div>
                                        <button class="btn btn-success btn-sm" data-bs-toggle="modal" data-bs-target="#payRentModal-@rental.PropertyId">
                                            <i class="bi bi-credit-card me-1"></i> Pay Rent
                                        </button>

                                        <!-- Pay Rent Modal -->
                                        <div class="modal fade" id="payRentModal-@rental.PropertyId" tabindex="-1" aria-labelledby="payRentModalLabel-@rental.PropertyId" aria-hidden="true">
                                            <div class="modal-dialog modal-dialog-centered">
                                                <div class="modal-content rounded-4 shadow">
                                                    <div class="modal-header border-0">
                                                        <h5 class="modal-title fw-bold" id="payRentModalLabel-@rental.PropertyId">
                                                            Pay Rent for @rental.Title
                                                        </h5>
                                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <div class="alert alert-info rounded-3">
                                                            <div class="d-flex">
                                                                <div class="me-3">
                                                                    <i class="bi bi-house-check fs-3"></i>
                                                                </div>
                                                                <div>
                                                                    <h6 class="fw-bold mb-1">Rental Information</h6>
                                                                    <p class="mb-0">
                                                                        <span>Monthly payment: <strong>₱@rental.Price.ToString("N0")</strong></span>
                                                                    </p>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        
                                                        <form method="post" action="@Url.Action("CreateRentCheckout", "Payment", new { area = "" })">
                                                            <input type="hidden" name="propertyId" value="@rental.PropertyId" />
                                                            
                                                            <div class="mb-4">
                                                                <label class="form-label fw-medium">Rental Duration</label>
                                                                <select class="form-select rounded-3 mb-2" name="rentalDuration" id="rentalDuration-@rental.PropertyId" 
                                                                        onchange="updateTotalPayment('@rental.PropertyId', @rental.Price)">
                                                                    <option value="1">1 month</option>
                                                                    <option value="3">3 months</option>
                                                                    <option value="6">6 months</option>
                                                                    <option value="12" selected>12 months (1 year)</option>
                                                                    <option value="24">24 months (2 years)</option>
                                                                    <option value="36">36 months (3 years)</option>
                                                                    <option value="custom">Custom end date</option>
                                                                </select>
                                                                
                                                                <div id="customDateContainer-@rental.PropertyId" class="mt-3" style="display: none;">
                                                                    <label class="form-label fw-medium">Select end date</label>
                                                                    <input type="date" id="customEndDate-@rental.PropertyId" name="customEndDate" class="form-control rounded-3" 
                                                                           min="@DateTime.Now.AddMonths(1).ToString("yyyy-MM-dd")" />
                                                                    <small class="text-muted">Minimum rental period is 1 month</small>
                                                                </div>
                                                            </div>
                                                            
                                                            <div class="mb-4">
                                                                <label for="notes-@rental.PropertyId" class="form-label fw-medium">Additional Information</label>
                                                                <textarea class="form-control rounded-3" id="notes-@rental.PropertyId" name="notes" rows="2" 
                                                                          placeholder="Special requirements, etc."></textarea>
                                                            </div>
                                                            
                                                            <div class="mb-4">
                                                                <div class="alert alert-light rounded-3">
                                                                    <div class="d-flex">
                                                                        <div class="me-3">
                                                                            <i class="bi bi-info-circle fs-3"></i>
                                                                        </div>
                                                                        <div>
                                                                            <h6 class="fw-bold mb-1">Payment Information</h6>
                                                                            <p class="mb-2">
                                                                                Monthly Rent: <strong>₱@rental.Price.ToString("N0")</strong>
                                                                            </p>
                                                                            <p class="mb-2">
                                                                                Duration: <strong id="durationText-@rental.PropertyId">12 months</strong>
                                                                            </p>
                                                                            <p class="mb-2">
                                                                                Total Payment: <strong id="totalPayment-@rental.PropertyId">₱@((rental.Price * 12).ToString("N0"))</strong>
                                                                            </p>
                                                                            <p class="mb-0 small">
                                                                                By proceeding, you'll be redirected to our secure payment provider PayMongo to complete your transaction.
                                                                            </p>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            
                                                            <div class="text-end">
                                                                <button type="button" class="btn btn-outline-secondary rounded-3 px-4 py-2" data-bs-dismiss="modal">Cancel</button>
                                                                <button type="submit" class="btn btn-success rounded-3 px-4 py-2">
                                                                    <i class="bi bi-credit-card me-1"></i> Proceed with Payment
                                                                </button>
                                                            </div>
                                                        </form>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
            
            <div class="row g-4">
                @foreach (var property in Model.RecentProperties)
                {
                    <div class="col-md-4">
                        <div class="dashboard-card h-100">
                            <img src="@Url.Content(property.ImageUrl)" class="property-thumbnail" alt="@property.Title">
                            <div class="p-3">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h5 class="fw-bold text-truncate mb-0">@property.Title</h5>
                                    <span class="badge @(property.OwnershipType == "Bought" ? "bg-success" : "bg-primary")">
                                        @property.OwnershipType
                                    </span>
                                </div>
                                <p class="text-muted mb-2 small">
                                    <i class="bi bi-geo-alt me-1"></i>@property.Address
                                </p>
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <div class="text-muted small">
                                        <i class="bi bi-calendar3 me-1"></i>
                                        Acquired: @property.AcquisitionDate.ToString("MMM dd, yyyy")
                                    </div>
                                    <div class="fw-semibold text-primary">₱@property.Price.ToString("N0")</div>
                                </div>
                                <a href="@Url.Action("Details", "Property", new { area = "", id = property.Id })" class="btn btn-sm btn-primary w-100">View Details</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <i class="bi bi-info-circle me-2"></i>
                You don't have any properties yet. Browse our listings to find your perfect home!
            </div>
            <a href="@Url.Action("Properties", "Home", new { area = "" })" class="btn btn-primary">Browse Properties</a>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Initialize rental duration selectors
            const durationSelectors = document.querySelectorAll('select[id^="rentalDuration-"]');
            durationSelectors.forEach(selector => {
                selector.addEventListener('change', function() {
                    const propertyId = this.id.split('-')[1];
                    const price = parseFloat(this.getAttribute('onchange').match(/(\d+)/)[0]);
                    
                    if (this.value === 'custom') {
                        document.getElementById(`customDateContainer-${propertyId}`).style.display = 'block';
                    } else {
                        document.getElementById(`customDateContainer-${propertyId}`).style.display = 'none';
                        updateTotalPayment(propertyId, price);
                    }
                });
            });
            
            // Initialize custom date inputs
            const customDateInputs = document.querySelectorAll('input[id^="customEndDate-"]');
            customDateInputs.forEach(input => {
                input.addEventListener('change', function() {
                    const propertyId = this.id.split('-')[1];
                    const selector = document.getElementById(`rentalDuration-${propertyId}`);
                    const price = parseFloat(selector.getAttribute('onchange').match(/(\d+)/)[0]);
                    
                    updateTotalPaymentCustomDate(propertyId, price, this.value);
                });
            });
        });
        
        function updateTotalPayment(propertyId, price) {
            const selector = document.getElementById(`rentalDuration-${propertyId}`);
            const duration = parseInt(selector.value);
            const totalPayment = price * duration;
            
            document.getElementById(`durationText-${propertyId}`).textContent = 
                duration === 1 ? '1 month' : 
                (duration === 12 ? '12 months (1 year)' : 
                 duration === 24 ? '24 months (2 years)' : 
                 duration === 36 ? '36 months (3 years)' : 
                 `${duration} months`);
            
            document.getElementById(`totalPayment-${propertyId}`).textContent = `₱${totalPayment.toLocaleString('en-US')}`;
        }
        
        function updateTotalPaymentCustomDate(propertyId, price, endDateString) {
            const startDate = new Date();
            const endDate = new Date(endDateString);
            
            // Calculate months difference
            let months = (endDate.getFullYear() - startDate.getFullYear()) * 12;
            months += endDate.getMonth() - startDate.getMonth();
            
            // Add 1 month if end day is greater than start day (for partial months)
            if (endDate.getDate() > startDate.getDate()) {
                months += 1;
            }
            
            // Ensure minimum 1 month
            months = Math.max(1, months);
            
            const totalPayment = price * months;
            
            document.getElementById(`durationText-${propertyId}`).textContent = 
                `${months} month${months === 1 ? '' : 's'} (until ${endDate.toLocaleDateString()})`;
            
            document.getElementById(`totalPayment-${propertyId}`).textContent = `₱${totalPayment.toLocaleString('en-US')}`;
        }
    </script>
}

@section Styles {
    <style>
        .dashboard-stat {
            background: linear-gradient(45deg, #4f5aff, #9f1ae2);
            padding: 1.5rem;
            border-radius: 0.75rem;
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
            height: 100%;
            position: relative;
            overflow: hidden;
        }

        .property-thumbnail {
            height: 200px;
            width: 100%;
            object-fit: cover;
        }

        .dashboard-card {
            border-radius: 0.75rem;
            overflow: hidden;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            background-color: #fff;
        }

        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
        }
    </style>
} 